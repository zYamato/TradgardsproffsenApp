@page "/register"
@using TradgardsproffsenApp.Models.UserModel
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject Data.Services.UserService UserService
@inject NavigationManager NaviManager

<body class=register-body>
    <div class="testbox">
        <form action="/">
            <div class="banner">
                <form-h1 style="font-weight:600">Registrera nytt konto</form-h1>
            </div>

            <div class="item">
                <p>Användarnamn<span class="required">*</span></p>
                <div class="name-item">
                    <input type="text" name="name" @bind="@newUser.UserName" placeholder="Användarnamn" />
                </div>
            </div>
            <div class="item">
                <p>Lösenord<span class="required">*</span></p>
                <div class="name-item">
                    <input type="password" name="pw" @bind="@newUser.Password" placeholder="Lösenord" />
                </div>
            </div>
            <div class="item">
                <p>E-post<span class="required">*</span></p>
                <div class="name-item">
                    <input type="text" name="email" @bind="@newUser.Email" placeholder="Ange din e-post" />
                </div>
            </div>

            <div class="btn-block">
                <div class="btn btn-primary" @onclick="@Create">Registrera</div>
            </div>
            @if (showError)
            {
                <h5 style="color: #FF0000">Något gick fel, kontrollera att uppgifterna stämmer och försök igen.</h5>
            }
        </form>
    </div>
</body>

@if (showingSuccessDialog)
{
    <OnRegisterDialog OnCancel="Cancel"></OnRegisterDialog>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    ClaimsPrincipal user;

    CreateUserDto newUser = new CreateUserDto();
    bool showingSuccessDialog;
    bool showError;
    protected override async Task OnInitializedAsync() // skyddar ifrån att användare skapar mer konton när hen är inloggad...
    {
        user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
            NaviManager.NavigateTo("");
    }

    async void Create()
    {
        newUser.ConfirmPassword = newUser.Password;

        if (await UserService.CreateUser(newUser))
        {
            showError = false;
            showingSuccessDialog = true;
        }
        else
        {
            showError = true;
        }
        this.StateHasChanged();// uppdaterar sidan

    }

    void Cancel()
    {
        showingSuccessDialog = false;
        NaviManager.NavigateTo("/login");
    }
}

